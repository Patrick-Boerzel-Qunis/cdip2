import numpy as np
from pyspark.sql.types import IntegerType, FloatType

COLUMN_MAPPING = {
    "DunBradstreet": {
        "FIRMENNUMMER": "BisnodeID",
        "STATUS": "Status",
        "FIRMENNAME": "Firmenname",
        "FIRMENTYP_LANGTEXT": "Firmentype",
        "HANDELSNAME": "Handelsname",
        "DNB_D_U_N_S_NUMMER": "DUNS_Nummer",
        "PLZ_STRASSE": "PLZ",
        "ORT_STRASSE": "Ort",
        "STRASSE": "Strasse",
        "HAUSNUMMER": "Hausnummer",
        "BUNDESLAND": "Bundesland",
        "GKZ": "GKZ",
        "VORWAHL_TELEFON": "Vorwahl_Telefon",
        "TELEFON": "Telefon",
        "UMSATZ": "Umsatz",
        "UMSATZ_JAHR": "Umsatz_Jahr",
        "SEGMENT_DICC": "Segment",
        "MARKETABLE": "Marketable",
        "HAUPTBRANCHE_08": "Hauptbranche",
        "HAUPTBRANCHENTEXT_08": "Hauptbranchentext",
        "NEBENBRANCHE_08": "Nebenbranche",
        "ANZAHL_NIEDERLASSUNGEN": "Anzahl_Niederlassungen",
        "ANZAHL_KONZERNMITGLIEDER": "Anzahl_Konzernmitglieder",
        "BESCHAEFTIGTE": "Beschaeftigte",
        "DIREKTE_MUTTER_NUMMER": "Direkte_Mutter_Nummer",
        "DIREKTE_MUTTER_LAND": "Direkte_Mutter_Land",
        "HoechsteMutterNummer_0": "HNR",
        "RECHTSFORM_TEXT": "Rechtsform",
        "EHEMALIGER_FIRMENNAME": "Ehemaliger_Firmenname",
        "HANDELSREGISTER": "Register",
    },
    "BeDirect": {
        "BE_ID": "BED_ID",
        "BE_FIRMENNAME_GESAMT": "Firmenname",
        "BE_PLZ": "PLZ",
        "BE_ORT": "Ort",
        "BE_STRASSE": "Strasse",
        "BE_HAUSNUMMER": "Hausnummer",
        "BE_VORWAHL": "Vorwahl_Telefon",
        "BE_RUFNUMMER": "Telefon",
        "BE_E_MAIL": "Email",
        "BE_HOMEPAGE": "Website",
        "BE_PRIMAERBRANCHE": "Hauptbranche",
        "BE_BRANCHE2": "Nebenbranche_1",
        "BE_BRANCHE3": "Nebenbranche_2",
        "BE_BRANCHE4": "Nebenbranche_3",
        "BE_BRANCHE5": "Nebenbranche_4",
        "BE_MITARBEITERSTAFFEL": "Beschaeftigte_Code",
        "BE_ANZAHL_NL_FILIALEN": "Anzahl_Niederlassungen",
        "HR_TYP": "Register_Type",
        "HR_NUMMER": "Register_Nummer",
        "BE_UMSATZSTAFFEL": "Umsatz_Code",
        "TELEFON_SELECT": "Tel_Select",
        "FLAG_QUALITAET_ORG": "Flag_Quality",
        "BE_ANREDE": "Geschlecht_Text",
        "BE_TITEL": "Titel",
        "BE_VORNAME": "Vorname",
        "BE_NACHNAME": "Name",
        "BE_PREFIX": "Prefix_Name",
        "BIPID_DIREKTE_MUTTER": "Direkte_Mutter_Nummer",
        "BIPID_HOECHSTE_MUTTER": "HNR",
        "BE_RECHTSFORM_ID": "Rechtsform",
    },
    "MapPlzBundesland": {
        "PLZ": "PLZ",
        "BUNDESLAND":"Bundesland",
    },
    "MapBedBranche": {
    "BRANCHE": "Hauptbranche",
    "BRANCHENTEXT": "Hauptbranchentext",
    },
    "BisnodeForBeD": {
        "FIRMENNUMMER": "BisnodeID",
        "DNB_D_U_N_S_NUMMER": "DUNS_Nummer",
        "BESCHAEFTIGTE": "Beschaeftigte",
        "UMSATZ": "Umsatz",
    },
    "Industriescore": {
    "WZ8_H5_CODE": "Hauptbranche",
    "INDUSTRY_SCORE": "Industry_Score",
    },
}

COLUMN_TYPE_MAPPING = {
    "DunBradstreet": {
        "FIRMENNUMMER": IntegerType(),
        "FIRMENZENTRALE_NUMMER": IntegerType(),
        "DNB_D_U_N_S_NUMMER": IntegerType(),
        "PLZ_STRASSE": IntegerType(),
        "POSTFACH": IntegerType(),
        "PLZ_POSTFACH": IntegerType(),
        "GKZ": IntegerType(),
        "VORWAHL_TELEFON": IntegerType(),
        "TELEFON": IntegerType(),
        "UMSATZ": FloatType(),
        "UMSATZ_JAHR": IntegerType(),
        "SEGMENT_DICC": IntegerType(),
        "HAUPTBRANCHE_08": IntegerType(),
        "ANZAHL_NIEDERLASSUNGEN": IntegerType(),
        "ANZAHL_KONZERNMITGLIEDER": IntegerType(),
        "BESCHAEFTIGTE": IntegerType(),
        "DIREKTE_MUTTER_NUMMER": IntegerType(),
        "HoechsteMutterNummer_0": IntegerType(),
        "AZ_LAENGENGRAD": FloatType(),
        "AZ_BREITENGRAD": FloatType()
    },
    "BeDirect": {
        "BE_ID": IntegerType(),
        "BIPID_HOECHSTE_MUTTER": IntegerType(),
        "BIPID_DIREKTE_MUTTER": IntegerType(),
    },
    "Industriescore": {
        "INDUSTRY_SCORE": IntegerType(),
    },
}

MAP_TITLE = {
    "Ingenieur": np.nan,
    "Dr. med.": "Dr.",
    "nan": np.nan,
    "Baron": np.nan,
    "Rechtsanwalt": np.nan,
    "Professor": "Prof.",
    "Baroness": np.nan,
    "Gräfin": np.nan,
    "Graf": np.nan,
    "Freifrau": np.nan,
    "Freiherr": np.nan,
    "Ritter": np.nan,
    "Prinzessin": np.nan,
    "Edler": np.nan,
    "Dr. Ing.": "Dr.",
    "Prof. Dr. med.": "Prof. Dr.",
    "Prof. Dr. Dr.": "Prof. Dr.",
    "Dr. Dr.": "Dr.",
    "Dr. mult.": "Dr.",
    "Dr. med": "Dr.",
    "Dr. h.c.": "Dr.",
    "Prof. Dr. med.": "Prof. Dr.",
    "Prof. Dr. Dr. h. c.": "Prof. Dr.",
    "Dr. Ingenieur": "Dr.",
    "Botschafter": np.nan,
    "Dr. Graf": "Dr.",
    "Prof. Dr. Ingenieur": "Prof. Dr.",
    "Exzellenz": np.nan,
    "Dr. Ing. Ingenieur": "Dr.",
    "Dr. Baron": "Dr.",
    "Notar": np.nan,
    "Professor Dr.": "Prof. Dr.",
    "Professor Dr. Ing.": "Prof. Dr.",
    "Hauptmann": np.nan,
}

MAP_GENDER = {
    "männlich": "Herr",
    "weiblich": "Frau",
    "Freiherr": "Herr",
    "Freifrau": "Frau",
}

MAP_REV_MEDIAN = {
    "00": np.nan,
    "01": 0.130,
    "02": 0.170,
    "03": 0.270,
    "04": 0.630,
    "05": 1.935,
    "06": 5.720,
    "07": 30.000,
    "08": 78.316,
    "09": 670.832,
}

MAP_EMPL_MEDIAN = {
    "00": np.nan,
    "01": 2,
    "02": 6,
    "03": 12,
    "04": 26,
    "05": 61,
    "06": 121,
    "07": 251,
    "08": 590,
    "09": 1146,
    "10": 2320,
}

RECHTSREFORM_MAPPING = {
    "3": "AG",
    "4": "keine RF, Einzelfirma, Behörde, Institution etc.",
    "5": "und Partner",
    "7": "AG & Co.",
    "8": "AG & Co. KG",
    "9": "AG & Co. oHG",
    "10": "AÖR",
    "11": "eG",
    "12": "EWIV",
    "13": "GbR",
    "14": "GmbH",
    "15": "GmbH & Co.",
    "16": "GmbH & Co. KG",
    "17": "GmbH & Co. oHG",
    "18": "KG",
    "19": "KGaA",
    "20": "mbH",
    "21": "mbH & Co.",
    "22": "mbH & Co. KG",
    "23": "mbH & Co. oHG",
    "24": "oHG",
    "26": "Partnerschaft",
    "27": "VVaG",
    "28": "e. V.",
    "29": "e. Kfm.",
    "30": "e. Kfr.",
    "31": "e.K.",
    "32": "UG (haftungsbeschränkt)",
    "33": "UG (haftungsbeschränkt) &  Co. KG",
    "34": "SE",
    "35": "SE & Co. KG",
    "36": "SE & Co. KGaA",
    "37": "AG & Co. KGaA",
    "45": "aG",
    "46": "gGmbH",
    "47": "VGaG",
    "48": "Arge",
    "49": "Limited",
    "50": "Limited & Co. KG",
    "51": "AG & Co. KGaA",
}